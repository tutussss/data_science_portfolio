<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg">
<head>
  <meta charset="UTF-8" />
  <title>Introduction</title>
  <link type="text/css" rel="stylesheet" media="all" href="style.css" />
  <link type="text/css" rel="stylesheet" media="all" href="core.css" />
</head>
<body>
  <div id="sbo-rt-content"><section>

    <header>

      <h1 class="header-title">Introduction</h1>

    </header>

    <article>

      <p style="margin: 0in;margin-bottom: .0001pt"><span>This chapter will cover how the Tableau dashboard performance is boosted by using extracts. We'll look at different types of Tableau file formats and types of extracts. The chapter introduces us to Tableau's in-memory fast-data-engine technology, called Hyper, that was released in October 2017, and we'll discuss what updates to expect with version 2018.3. This chapter will enable us to optimize performance of their Tableau dashboards using aggregated extracts, dimension reduction, extract filters, incremental extract refreshes, and cross-data joins.  The principles we use to connect to text files, although very simple examples, can apply to more sophisticated data sources.</span></p>

    </article>

  </section>

</div>
</body>
</html>